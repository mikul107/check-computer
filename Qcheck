$comp = Read-Host 'Podaj nazwe lub IP komputera'

$Name = (Get-WmiObject Win32_Computersystem -ComputerName $comp -ErrorAction SilentlyContinue).Name
if(!$Name){
Write-Host -ForegroundColor Yellow ("Host nie odpowiada")
}
else{
$Model = (Get-WmiObject Win32_Computersystem -ComputerName $comp ).Model
$OS = (Get-WmiObject Win32_OperatingSystem -ComputerName $comp ).Caption
$OSVersion = (Get-WmiObject Win32_OperatingSystem -ComputerName $comp ).Version
$User = (Get-WmiObject –Class Win32_ComputerSystem –ComputerName $comp).UserName
$Procesor = (Get-WmiObject Win32_Processor -ComputerName $comp ).Name
$Graphic = ((Get-WmiObject Win32_VideoController  -ComputerName $comp ).Name -Join ', ')
$NetworkAdapters = Get-WmiObject win32_networkadapterconfiguration -Filter "DHCPEnabled='True'" -ComputerName $comp | Format-Table Description,IPAddress,MACAddress
$PysicalMemory = Get-WmiObject -class "win32_physicalmemory" -namespace "root\CIMV2" -ComputerName $comp
$TotalSlots = ((Get-WmiObject -Class "win32_PhysicalMemoryArray" -namespace "root\CIMV2" -ComputerName $comp).MemoryDevices | Measure-Object -Sum).Sum 
$UsedSlots = (($PysicalMemory) | Measure-Object).Count
$Partitions = Get-WmiObject -Class Win32_logicaldisk -Filter "DriveType = '3'" -ComputerName $comp | Select-Object -Property DeviceID, VolumeName,@{L='FreeSpaceGB';E={"{0:N2}" -f ($_.FreeSpace/1GB)}},@{L="Capacity";E={"{0:N2}" -f ($_.Size/1GB)}}
$HardDiscs = Get-WMIObject win32_diskdrive -ComputerName $comp | Select-Object Model,SerialNumber,@{L='SizeGB';E={"{0:N2}" -f ($_.Size/1GB)}},Partitions,Status | Format-Table
cls
Write-Host -ForegroundColor Green ("Host Name: ") -NoNewline; $Name
Write-Host -ForegroundColor Green ("Model: ") -NoNewline; $Model
Write-Host -ForegroundColor Green ("OS: ") -NoNewline; $OS
Write-Host -ForegroundColor Green ("OS Version: ") -NoNewline; $OSVersion
Write-Host -ForegroundColor Green ("Current Logon User: ") -NoNewline; $User
Write-Host -ForegroundColor Green ("Procesor: ") -NoNewline; $Procesor
Write-Host -ForegroundColor Green ("Graphic Card: ") -NoNewline; $Graphic
Write-Host -ForegroundColor Green ("Network Adapters: "); $NetworkAdapters
Write-Host -ForegroundColor Green ("Memory Modules: ") -NoNewline; $PysicalMemory | Format-Table Tag,BankLabel,@{n="Capacity(GB)";e={$_.Capacity/1GB}},Manufacturer,PartNumber,Speed -AutoSize 
Write-Host -ForegroundColor Green  ("Total Memory: ") -NoNewline; "$((($PysicalMemory).Capacity | Measure-Object -Sum).Sum/1GB)GB" 
Write-Host -ForegroundColor Green ("Total Memory Slots: ") -NoNewline; $TotalSlots
Write-Host -ForegroundColor Green ("Used Memory Slots: ") -NoNewline; $UsedSlots;
Write-Host -ForegroundColor Green ("Discs Information: ");$Partitions ;$HardDiscs
}
